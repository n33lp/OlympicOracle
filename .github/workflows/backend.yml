name: Deploy Django Backend

on:
  push:
    branches: [ "backend" ]
  pull_request:
    branches: [ "backend" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_PROJECT_DIR: ${{ secrets.EC2_PROJECT_DIR }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.7'

      - name: Install dependencies
        run: pip install -r backend/olympic_project/requirements.txt

      - name: Add SSH key
        run: |
          echo "$EC2_SSH_KEY" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            # Ensure necessary directories exist
            mkdir -p $EC2_PROJECT_DIR

            # Navigate to project directory
            cd $EC2_PROJECT_DIR

            # Clone the repository if it doesn't exist
            if [ ! -d ".git" ]; then
              git clone https://github.com/yourusername/yourrepository.git .
            else
              git pull origin backend
            fi

            # Set up virtual environment
            if [ ! -d "/home/ubuntu/venv" ]; then
              python3 -m venv /home/ubuntu/venv
            fi
            source /home/ubuntu/venv/bin/activate

            # Install dependencies
            pip install gunicorn
            pip install -r backend/olympic_project/requirements.txt

            # Create Gunicorn service file
            sudo bash -c 'cat > /etc/systemd/system/gunicorn.service <<- EOL
            [Unit]
            Description=gunicorn daemon
            After=network.target

            [Service]
            User=ubuntu
            Group=www-data
            WorkingDirectory=$EC2_PROJECT_DIR
            ExecStart=/home/ubuntu/venv/bin/gunicorn --access-logfile - --workers 3 --bind unix:$EC2_PROJECT_DIR.sock olympic_project.wsgi:application

            [Install]
            WantedBy=multi-user.target
            EOL'

            # Reload systemd and restart Gunicorn
            sudo systemctl daemon-reload
            sudo systemctl start gunicorn
            sudo systemctl enable gunicorn

            # Create Nginx configuration file
            sudo bash -c 'cat > /etc/nginx/sites-available/olympic_project <<- EOL
            server {
                listen 80;
                server_name $EC2_HOST;

                location = /favicon.ico { access_log off; log_not_found off; }
                location /static/ {
                    root $EC2_PROJECT_DIR;
                }

                location / {
                    include proxy_params;
                    proxy_pass http://unix:$EC2_PROJECT_DIR.sock;
                }
            }
            EOL'

            # Enable Nginx configuration and restart Nginx
            sudo ln -sf /etc/nginx/sites-available/olympic_project /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
        EOF
        shell: bash
