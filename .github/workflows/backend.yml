name: Deploy Django Backend

on:
  push:
    branches: ["backend"]
  pull_request:
    branches: ["backend"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.7'

      - name: Install dependencies
        run: pip install -r backend/olympic_project/requirements.txt

      - name: Add SSH key
        run: |
          echo "$EC2_SSH_KEY" > key.pem
          chmod 600 key.pem

      - name: Compress project files
        run: tar -czf OlympicOracle.tar.gz ./*

      - name: Remove Old Files
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
            ls
            rm -rf OlympicOracle
            rm -f OlympicOracle.tar.gz
            ls
          EOF
        shell: bash

      - name: Copy project files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem OlympicOracle.tar.gz $EC2_USER@$EC2_HOST:/home/ubuntu/

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'


            PROJECT_DIR="/home/ubuntu/OlympicOracle"

            if [ ! -d "$PROJECT_DIR" ]; then
              mkdir -p "$PROJECT_DIR"
            fi

            tar -xzf /home/ubuntu/OlympicOracle.tar.gz -C "$PROJECT_DIR"

            cd "$PROJECT_DIR/backend/olympic_project"
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi

            source venv/bin/activate
            pip install -r requirements.txt

            if [ ! -f "manage.py" ]; then
              echo "manage.py not found in $PROJECT_DIR/backend/olympic_project"
              exit 1
            fi

            python manage.py migrate

          EOF
        shell: bash
